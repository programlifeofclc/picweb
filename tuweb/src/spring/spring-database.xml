<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"  
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="
   http://www.springframework.org/schema/beans 
   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
   http://www.springframework.org/schema/context      
   http://www.springframework.org/schema/context/spring-context-3.1.xsd"> 
	
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

 	<!--  spring的jdbc数据源
 	<bean name="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 		<property name="driverClassName" value="${jdbc.driverClass}"/>
 		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
 	</bean>
 	-->
 	<bean name="dataSource"  class="com.mchange.v2.c3p0.ComboPooledDataSource"  destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}"></property>  
        <property name="jdbcUrl" value="${jdbc.url}"></property>  
        <property name="user" value="${jdbc.username}"></property>  
        <property name="password" value="${jdbc.password}"></property>  
 		<!--连接池中保留的最小连接数。-->  
        <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>  
		<!--连接池中保留的最大连接数。Default: 15 -->  
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>  
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>  
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>  
 		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->  
        <property name="idleConnectionTestPeriod" value="60"></property>  
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->  
        <property name="acquireRetryAttempts" value="30"></property>  
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效  
		 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试  
		 获取连接失败后该数据源将申明已断开并永久关闭。Default: false-->
        <property name="breakAfterAcquireFailure" value="false"></property>  
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的  
		时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable  
		等方法来提升连接测试的性能。Default: false -->
        <property name="testConnectionOnCheckout" value="false"></property>  
 	</bean>
 	
 	<!-- sessionFactory创建 -->
 	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">  
        <property name="dataSource" ref="dataSource"></property>  
        <property name="mappingResources">  
            <list>
                <value>beans/User.hbm.xml</value>
                <value>beans/TotoImgs.hbm.xml</value>
            </list>
        </property>  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.generate_statistics">false</prop>  
                <prop key="hibernate.connection.release_mode">auto</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>  
    </bean>
 	
 	<!-- Hibernate模板类 -->
 	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
 		<property name="sessionFactory" ref="sessionFactory"></property>
 	</bean>
 	
 	<!-- basedao类 xml配置 现在采用注解
	<bean id="baseDao" class="com.toto.www.dao.BaseDao">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>
	-->

	<!-- 配置事务管理开始 -->  
    <bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>


	<!--定义事务通知 -->  
	<!--  AAA  -->
	<tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">  
	    <!-- 定义方法的过滤规则 -->
	    <tx:attributes>  
	        <!-- 所有方法都使用事务 -->  
	        <tx:method name="update*" propagation="REQUIRED"/>
	        <!-- 所有方法都使用事务 -->  
	        <tx:method name="add*" propagation="REQUIRED"/>
	        <tx:method name="save*" propagation="REQUIRED"/>
	         <tx:method name="insert*" propagation="REQUIRED"/>
	        <!-- 定义所有get开头的方法都是只读的 -->  
	        <tx:method name="get*" read-only="true"/>  
	    </tx:attributes>  
	</tx:advice>
	
	<!-- 定义AOP配置 -->  
	<aop:config>
	    <!-- 定义一个切入点 -->
	    <aop:pointcut id="services"  expression="execution(* com.toto.www.service..*(..))" />  
	    <!-- 对切入点和事务的通知，进行适配 -->  
	    <aop:advisor pointcut-ref="services" advice-ref="txAdvice" />
	</aop:config>
	<!-- AAA -->
	
	
	<!-- 注解事务的声明 -->
	<!-- BBB  -->
	<!-- AAA为配置事务  BBB为注解事务 -->
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>
	<!--  BBB -->
</beans>